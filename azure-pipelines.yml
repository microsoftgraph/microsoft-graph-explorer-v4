# ------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.
# See License in the project root for license information.
# ------------------------------------------------------------------------------
#
# 1. Validates the repository's pull requests and commits
# 2. Builds and publishes release artifacts

name: $(date:yyyyMMdd)$(rev:.r)

pool: MsGraphBuildAgentsWindowsGE

pr:
  branches:
    include:
      - master
      - dev
      - feature/*
      - task/*
      - fix/*
  paths:
    exclude:
      - .github/*
      - .vscode/*
      - build/*
      - .gitignore
      - .prettierrc
      - CHANGELOG.md
      - CONTRIBUTING.md
      - LICENSE
      - README.md
      - azure-pipelines.yml
      - package-lock.json

trigger:
  branches:
    include:
      - master
      - dev
      - feature/*
      - task/*
      - fix/*
  paths:
    exclude:
      - .github/*
      - .vscode/*
      - build/*
      - .gitignore
      - .prettierrc
      - CHANGELOG.md
      - CONTRIBUTING.md
      - LICENSE
      - README.md
      - azure-pipelines.yml
      - package-lock.json

jobs:
  - job: One
    displayName: "Build and test validation"
    steps:
      - task: CredScan@2
        inputs:
          toolMajorVersion: "V2"

      - task: ComponentGovernanceComponentDetection@0
        inputs:
          scanType: 'Register'
          verbosity: 'Verbose'
          alertWarningLevel: 'High'
          ignoreDirectories: '.github,.vscode/'

      - task: NodeTool@0
        inputs:
          versionSpec: "12.x"
        displayName: "Install Node.js"

      - script: |
          npm install
        displayName: "npm install"

      - script: |
          npm run lint
        displayName: "Runs linting checks"

      - script: |
          npm test
        displayName: "Runs Unit tests"

      - script: |
          npm run ci
        displayName: "Runs Accessibility tests"

      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFormat: "JUnit"
          testResultsFiles: "test-report.xml"
        displayName: "Publish Test Results"

      - script: |
          npm run build
        displayName: "Run build"

  - job: Two
    displayName: "Publish artifacts"
    dependsOn: One
    condition: succeeded()
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: "12.x"
        displayName: "Install Node.js"

      - script: |
          npm install
        displayName: "npm install"

      - script: |
          npm run build
        env:
          REACT_APP_CLIENT_ID: $(REACT_APP_STAGING_CLIENT_ID)
          REACT_APP_INSTRUMENTATION_KEY: $(REACT_APP_STAGING_INSTRUMENTATION_KEY)
          REACT_APP_FEEDBACK_CAMPAIGN_ID: $(REACT_APP_STAGING_FEEDBACK_CAMPAIGN_ID)
          REACT_APP_NPS_FEEDBACK_CAMPAIGN_ID: $(REACT_APP_NPS_FEEDBACK_CAMPAIGN_ID)
          REACT_APP_NOMINATION_PERIOD: $(REACT_APP_NOMINATION_PERIOD)
          REACT_APP_COOLDOWN_PERIOD: $(REACT_APP_COOLDOWN_PERIOD)
        displayName: "Build static assets for staging"

      - task: PowerShell@2
        displayName: "Set version-number"
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        inputs:
          targetType: "inline"
          script: |
            $lernaPath = "$Env:BUILD_SOURCESDIRECTORY\package.json"
            $json = Get-Content "$lernaPath" | Out-String | ConvertFrom-Json
            $versionNumber = $json.version;
            Write-Host "Setting the build number variable to '$versionNumber'."
            Write-Host "##vso[build.updatebuildnumber]$versionNumber"

      - script: |
          npm run build
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        env:
          REACT_APP_CLIENT_ID: $(REACT_APP_PROD_CLIENT_ID)
          REACT_APP_INSTRUMENTATION_KEY: $(REACT_APP_INSTRUMENTATION_KEY)
          REACT_APP_FEEDBACK_CAMPAIGN_ID: $(REACT_APP_FEEDBACK_CAMPAIGN_ID)
          REACT_APP_NPS_FEEDBACK_CAMPAIGN_ID: $(REACT_APP_NPS_FEEDBACK_CAMPAIGN_ID)
          REACT_APP_NOMINATION_PERIOD: $(REACT_APP_NOMINATION_PERIOD)
          REACT_APP_COOLDOWN_PERIOD: $(REACT_APP_COOLDOWN_PERIOD)
        displayName: "Build static assets for prod"

      - task: PowerShell@2
        displayName: "Create _manifest directory"
        inputs:
          targetType: "inline"
          script: |
            $manifestPath = "$Env:SYSTEM_DEFAULTWORKINGDIRECTORY/_manifest"
            mkdir -p $manifestPath
            Write-Host "Created directory '$manifestPath'."

      - task: ManifestGeneratorTask@0
        inputs:
          ManifestDirPath: "$(System.DefaultWorkingDirectory)/_manifest"
          BuildComponentPath: "$(System.DefaultWorkingDirectory)/build"
          PackageName: "graph-explorer-v2"
          PackageVersion: "$(Build.UpdateBuildNumber)"
      
      - task: CopyFiles@1
        displayName: "Copy manifest files to artifact staging dir: manifest"
        inputs:
          SourceFolder: "$(System.DefaultWorkingDirectory)/_manifest"
          TargetFolder: "$(Build.ArtifactStagingDirectory)/manifest"
      
      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact: manifest"
        inputs:
          PathtoPublish: "$(Build.ArtifactStagingDirectory)/manifest"
          ArtifactName: manifest

      - task: CopyFiles@1
        displayName: "Copy files to: $(Build.ArtifactStagingDirectory)/build"
        inputs:
          SourceFolder: "$(System.DefaultWorkingDirectory)/build"
          TargetFolder: "$(Build.ArtifactStagingDirectory)/build"

      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact: drop"
        inputs:
          PathtoPublish: "$(build.ArtifactStagingDirectory)/build"
          ArtifactName: drop

      - task: DeleteFiles@1
        inputs:
          contents: node_modules
        displayName: "Delete node_modules"
