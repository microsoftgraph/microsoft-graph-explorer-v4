name: 'Combine PRs'

# This workflow will merge all dependabot PRs into one branch and open a new PR against dependabot-upgrades
on:
  workflow_dispatch:
    inputs:
      branchPrefix:
        description: 'Branch prefix to find combinable PRs based on'
        required: true
        default: 'dependabot/'
      combineBranchName:
        description: 'Name of the branch to combine PRs into'
        required: true
        default: 'dependabot-upgrades'

jobs:
  # Update dependabot-upgrades branch so that it's in sync with dev
  merge-dev-dependabot-upgrades:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Set Git config
          run: |
            git config user.name github-actions
            git config user.email github-actions@github.com

        - name: Merge dev to dependabot-upgrades
          run: |
            git fetch --unshallow
            git pull origin
            git checkout dependabot-upgrades
            git merge --no-ff origin/dev --allow-unrelated-histories -m "Auto-merge dev to dependabot-upgrades"
            git push

  # Get all PRs opened by dependabot
  combine-prs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v3
        id: fetch-branch-names
        name: Fetch branch names
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const pulls = await github.paginate('GET /repos/:owner/:repo/pulls', {
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            branches = [];
            prs = [];
            base_branch = null;
            for (const pull of pulls) {
              const branch = pull['head']['ref'];
              console.log('Pull for branch: ' + branch);
              if (branch.startsWith('${{ github.event.inputs.branchPrefix }}')) {
                console.log('Branch matched: ' + branch);
                console.log('Adding branch to array: ' + branch);
                branches.push(branch);
                prs.push('#' + pull['number'] + ' ' + pull['title']);
              }
            }

            if (branches.length == 0) {
              core.setFailed('No PRs/branches matched criteria');
              return;
            }

            core.setOutput('base-branch', 'dev');
            core.setOutput('prs-string', prs.join('\n'));

            combined = branches.join(' ')
            console.log('Combined: ' + combined);
            return combined

      # Checks-out the repository under $GITHUB_WORKSPACE, so this job can access it
      - uses: actions/checkout@v2.3.3
        with:
          fetch-depth: 0

      # Merges all dependabot PRs into the dependabot-upgrades branch
      - name: Created combined branch
        env:
          BRANCHES_TO_COMBINE: ${{ steps.fetch-branch-names.outputs.result }}
          COMBINE_BRANCH_NAME: ${{ github.event.inputs.combineBranchName }}
        run: |
          echo "$BRANCHES_TO_COMBINE"
          sourcebranches="${BRANCHES_TO_COMBINE%\"}"
          sourcebranches="${sourcebranches#\"}"

          git config pull.rebase false
          git config user.name github-actions
          git config user.email github-actions@github.com

          git fetch
          git pull origin
          git checkout $COMBINE_BRANCH_NAME

          git pull origin $sourcebranches --no-edit
          git push -f origin $COMBINE_BRANCH_NAME

      # Opens a pull request to dev from dependabot-upgrades branch
      - uses: actions/github-script@v3
        name: Create Combined Pull Request
        env:
          PRS_STRING: ${{ steps.fetch-branch-names.outputs.prs-string }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const prString = process.env.PRS_STRING;
            const body = 'This PR was created by the Combine PRs action by combining the following PRs:\n' + prString;
            await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Combined dependabot pull requests',
              head: '${{ github.event.inputs.combineBranchName }}',
              base: '${{ steps.fetch-branch-names.outputs.base-branch }}',
              body: body
            });
