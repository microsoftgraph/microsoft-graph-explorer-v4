name: Sonar Cloud Analysis

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - dev
  pull_request:
    types: [opened, reopened, synchronize]

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  checksecret:
    name: Check if sonar secrets are available
    runs-on: ubuntu-latest
    outputs:
      is_SONAR_TOKEN_set: ${{ steps.checksecret_job.outputs.is_SONAR_TOKEN_set }}
    steps:
      - name: Verify sonar secrets
        id: checksecret_job
        run: |
          echo "is_SONAR_TOKEN_set: ${{ env.SONAR_TOKEN != '' }}"
          echo "::set-output name=is_SONAR_TOKEN_set::${{ env.SONAR_TOKEN != '' }}"

  sonar_cloud_analysis:
    name: sonar cloud analysis
    needs: [checksecret]
    if: needs.checksecret.outputs.is_SONAR_TOKEN_set == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: '12.x'
      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: |
          npm run test -- --coverage --watchAll=false --testResultsProcessor=jest-sonar-reporter
          mkdir -p testfiles && cp -r coverage/* testfiles
          ls testfiles

      - name: Fix code coverage paths
        run: sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace/@g' coverage/lcov.info

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          sonar.javascript.lcov.reportPaths: testfiles/lcov.info
